#!/bin/bash
#
# MFIX script file for obtaining user-defined files and
# executing 'make'
#  Usage:
#     1) on unix machines     :  sh    mfix/model/make_mfix
#     2) on NT using PGI bash :  bash  mfix/model/make_mfix

input=$@

MFIX_VERSION="2013-2"
EXEC_FILE="post-mfix"
MAKEFILE="Makefile"
DPO_BASE=".."
DPO="POST_OBJ"
OBJ_EXT="o"
FORTRAN_EXT="f"

RUN_DIR=
MFIX_SRC=
MFIX_CONFIG=
MFIX_TOOLS=
MFIX_POST=

# Set some of the folder paths.
RUN_DIR=$(pwd)

# This permits the command to run from the post folder
if test $0 = "make_post"; then
  MFIX_SRC=../model
  MFIX_CONFIG=../config
else
  MFIX_POST=$(echo $0 | sed 's/\/make_post//')
  MFIX_SRC=${MFIX_POST}/../model
  MFIX_CONFIG=${MFIX_POST}/../config
fi

# This sets absolute paths.
. ${MFIX_CONFIG}/sys_info.sh

# Request variables.
REQ_MODE=0
REQ_OPT=0
OPT=1
REQ_COMP=1

# Collected from the user
USE_TAU=0
USE_NETCDF=0
EXPERT=0
FORCE_COMPILE=0
USE_DEBUG=0

# SMP/DMP Variables
USE_SMP=0
USE_DMP=0

# Auto-compile
#  0 : User provides all input
#  1 : Use last build
AUTOCOMPILE=0

# Set based upon user input.
COMP_FILE=
FORT_FLAGS=
FORT_FLAGS2=
FORT_FLAGS3=
LINK_CMD=
LINK_FLAGS=
LIB_FLAGS=
FORTRAN_CMD=
MODULE_CODE=

# Parse user arguments.
. $MFIX_CONFIG/parse_args.sh

# > Compiler
. $MFIX_CONFIG/sys_comp.sh

# Set the compiler flags.
. $COMP_FILE

# Set NetCDF library flags
. ${MFIX_CONFIG}/netcdf.sh

# Copy incs from model directory
. ${MFIX_CONFIG}/set_post_incs.sh

# Construct the makefile
. ${MFIX_CONFIG}/build_post_Makefile.sh

echo "make -j -f ${MAKEFILE} $inline_objs"
make ${MAKE_ARGS} -f "${MAKEFILE}" $inline_objs

echo "Please wait..."

echo "make -j -f ${MAKEFILE} ${EXEC_FILE}"
make ${MAKE_ARGS} -f ${MAKEFILE} ${EXEC_FILE}
result=$?

if test $result = 0; then
  /bin/cp -f ${EXEC_FILE} ${RUN_DIR}
  if test ${USE_DMP} = 1; then
    echo
    echo "**********************************************"
    echo " Compilation successful: ${EXEC_FILE} created"
    echo " To run MFIX type (or equivalent): "
    echo "   mpirun -np<# processors> ${EXEC_FILE}"
    echo "**********************************************"
    echo
  else
    echo
    echo "**********************************************"
    echo " Compilation successful: ${EXEC_FILE} created"
    echo " To run MFIX type: ./${EXEC_FILE}"
    echo "**********************************************"
    echo
  fi
else
  echo
  echo
  echo "*** File ${EXEC_FILE} NOT created."
  echo
fi

exit $result
