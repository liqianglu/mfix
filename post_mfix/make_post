#!/bin/bsh -f
#
# POST_MFIX script file for executing 'make'
# M. Syamlal/P.Nicoletti                   9-27-95
#------------------------------------------------------------------------
# For compiling post_mfix the ../model directory must exist.
#
    chmod +w machine.f

    set `uname -s` ; opsys=$1
    
    case $opsys in

    Linux)
            echo
            echo "Compiling for Linux computer (Portland group)"
            echo	    
	    
            cp ../model/LINUX.F machine.f
            if test -f COMPILED.FOR.LINUX.PG
            then
	        echo
            else
                rm *.o
                rm COMPILED.FOR.*
                touch COMPILED.FOR.LINUX.PG
            fi
	    
	    
            FORTRAN_CMD=pgf90
            LINK_CMD=pgf90
	       
	    
            OBJ_EXT=o
            FORTRAN_EXT=f
            compile_d="-c -Mfreeform -Mnosave -Mrecursive -Mreentrant -g -byteswapio"
            link_d="-g"
            compile="-c -Mfreeform -Mnosave -Mrecursive -Mreentrant -byteswapio"
            link=" "
            MODULE_CODE=1

            ;;
	    

      IRIX64) 
            echo
            echo "Compiling for SGI IRIX64 computer"
            echo
	    
            cp ../model/IRIXF90.F machine.f
            if test -f COMPILED.FOR.IRIX64F90
            then
	        echo
            else
                rm *.o
		rm *.a
                rm COMPILED.FOR.*
                touch COMPILED.FOR.IRIX64F90
            fi
	    
	    
            FORTRAN_CMD=f90
            LINK_CMD=f90
	       	    
            OBJ_EXT=o
            FORTRAN_EXT=f
            compile_d="-c -I../model -g -C -trapuv -freeform"
            link_d="-g -C -trapuv"
            compile="-c -I../model -n32 -g -freeform"
            link="-n32 -g"
            MODULE_CODE=0

            ;;
	    
      ULTRIX) 
            echo
            echo "Compiling for DEC ULTRIX computer"
            echo
	    
            cp ../model/ULTRIX.F machine.f
            if test -f COMPILED.FOR.ULTRIX
            then
	        echo
            else
                rm *.o
		rm *.a
                rm COMPILED.FOR.*
                touch COMPILED.FOR.ULTRIX
            fi
	    
	    
            FORTRAN_CMD=f90
            LINK_CMD=f90
     
            OBJ_EXT=o
            FORTRAN_EXT=f
            compile_d="-c -g -freeform -convert big_endian"
            link_d="-g -convert big_endian"
            compile="-c -O2 -freeform -convert big_endian"
            link="-O2 -convert big_endian"
            MODULE_CODE=0

            ;;
             

    CYGWIN32_NT)
            echo
            echo "Compiling for NT computer (Portland group)"
            echo	    
	    
            cp ../model/PGNT.F machine.f
            if test -f COMPILED.FOR.CYWIN32_NT.PG
            then
	        echo
            else
                rm *.o
                rm COMPILED.FOR.*
                touch COMPILED.FOR.CYWIN32_NT.PG
            fi
	    
	    
            FORTRAN_CMD=pgf90
            LINK_CMD=pgf90
	       	    
            OBJ_EXT=o
            FORTRAN_EXT=f
            compile_d="-c -Mfreeform -Mnosave -Mrecursive -Mreentrant -O0 -byteswapio"
            link_d=" "
            compile="-c -Mfreeform -Mnosave -Mrecursive -Mreentrant -O0 -byteswapio"
            link=" "
            MODULE_CODE=1

            ;;
	    
    CYGWIN_NT-4.0)
            echo
            echo "Compiling for NT computer (Portland group)"
            echo	    
	    
            cp ../model/PGNT.F machine.f
            if test -f COMPILED.FOR.CYWIN_NT-4.0.PG
            then
	        echo
            else
                rm *.o
                rm COMPILED.FOR.*
                touch COMPILED.FOR.CYWIN_NT-4.0.PG
            fi
	    
	    
            FORTRAN_CMD=pgf90
            LINK_CMD=pgf90
	       	    
            OBJ_EXT=o
            FORTRAN_EXT=f
            compile_d="-c -Mfreeform -Mnosave -Mrecursive -Mreentrant -O0 -byteswapio"
            link_d=" "
            compile="-c -Mfreeform -Mnosave -Mrecursive -Mreentrant -O0 -byteswapio"
            link=" "
            MODULE_CODE=1

            ;;
	    
   
   
   
      *) echo "no support for operating system: $opsys"
         echo 
	 echo "modify  make_post   to add support"
	 echo
         exit ;;
   esac

echo " "

#
#------------------------------------------------------------------------
# delete *.o *.mod and *.a files from model directory
echo "IMPORTANT: execute this makefile by typing \"sh make_post\" "
echo
echo
echo -n "Object files (*.o, *.mod, *.a) in mfix/model will be deleted. Continue? (y/n) [no] "
read delete_files
  case $delete_files in
  y|Y )
    echo "deleting files . . ."
    rm ../model/*.o ../model/*.mod ../model/*.a
    rm *.o *.mod
    ;;
  *)
    exit
    ;;
  esac

  echo
  echo "Please wait . . ."


#
#------------------------------------------------------------------------
#
#  Create a backup of the function.inc in the model directory and copy the
#  function.inc from the post_mfix directory to the model directory

#      Is there default file Mfix/model directory?
       if test -r "../model/function.0inc"
       then
          do_nothing="ok"
      
       else
#        Mfix/model directory does not have a default file. create one.
         cp "../model/function.inc" "../model/function.0inc"
       fi
       cp "./function.inc" "../model/function.inc"

#------------------------------------------------------------------------
#
    FORT_FLAGS="$compile"
    LINK_FLAGS="$link"
#
#
  export FORT_FLAGS
  export LINK_FLAGS
  export LIB_FLAGS
  export OBJ_EXT
  export FORTRAN_EXT
  export FORTRAN_CMD
  export LINK_CMD

 cp -p ../model/ep_s1.inc .
 cp -p ../model/ep_s2.inc .
 cp -p ../model/fun_avg1.inc .
 cp -p ../model/fun_avg2.inc .
 cp -p ../model/s_pr1.inc .
 cp -p ../model/s_pr2.inc .
 cp -p ../model/namelist.inc .
 cp -p ../model/sc_p_g1.inc .
 cp -p ../model/sc_p_g2.inc .

      
 case $MODULE_CODE in

      0)
         make -f post_u.make
         ;;

      1)  
         make -f post_l.make
         ;;

 esac
 
 if test $? = 0
 then
    echo
    echo 
    echo "********************************************"
    echo "* Compilation successful: post_mfix created*"
    echo "********************************************"
    echo 
 else
    echo
    echo
    echo "*** File post_mfix NOT created."
    echo 
 fi
 
# Restore the function.inc file in the model directory
  mv "../model/function.0inc" "../model/function.inc"

 chmod +w ep_s1.inc
 chmod +w ep_s2.inc
 chmod +w fun_avg1.inc
 chmod +w fun_avg2.inc
 chmod +w s_pr1.inc
 chmod +w s_pr2.inc
 chmod +w namelist.inc
 chmod +w sc_p_g1.inc
 chmod +w sc_p_g2.inc

 rm ep_s1.inc
 rm ep_s2.inc
 rm fun_avg1.inc
 rm fun_avg2.inc
 rm s_pr1.inc
 rm s_pr2.inc
 rm namelist.inc
 rm sc_p_g1.inc
 rm sc_p_g2.inc


