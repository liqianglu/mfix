Usage Examples:

The only Fortran compilers supported via the user menu are: 
Portland group , Intel, and gfortran.  The user can setup 
new_makepost for a different compiler (see below).

  1) sh new_makepost
 
     IMPORTANT: execute this makefile by typing "sh make_post"

     [1] Portland Group Linux Fortran Compiler (pgi)
     [2] Intel Fortran Compiler (ifort) 
     [3] gfortran

     Select the compiler to compile POST_MFIX? [3]


  2) to compile with the debug flags:

     sh new_makepost -debug


  3) to specify compiler on the command line:

     sh new_makepost gfortran


  4) specifying debug and compiler on command line:

     sh new_makepost ifort -debug

                or

     sh new_makepost -debug ifort

  5) -d switch (uses default compiler = gfortran)

     sh new_makepost -d

  6) The normal behavior of new_makepost is to remove all
     object and modules files before starting the compilation
     process.  You can by pass this by using the -skip
     flag.  This would normally only be done when you are 
     modifying post_mfix and doing testing on your changes.
     Caution: any existing object and modules files
     must be compatible with your current compiler options.

     sh new_makepost -skip



Using a compiler not curently supported:

1) in the post_mfix/config sub-folder, create a file named:

   user.sh

   The file does not need to be named "user", but must
   have an extension of "sh".

2) You will need to specify information on the compiler command
   and flags.  See the sample file : config/user.sh

3) You can instruct new_makepost to use that configuration
   on the command line:

   new_makepost    my_compiler

   Where you have created a file named : config/my_compiler.sh

