F77 = $(FC)
F77COMPILE = $(FC) $(AM_FCFLAGS) $(FCFLAGS)
FCCOMPILE  = $(FC) $(AM_FCFLAGS) $(FCFLAGS)
LINK = $(FC) $(AM_FCFLAGS) $(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@

.f.$(OBJEXT):
	$(F77COMPILE) -c -o $@ $<

FC_MODEXT=mod
CLEANFILES=*.$(FC_MODEXT)
MODDIR=$(top_builddir)/model

# Fortran preprocessor is used (-cpp)
AM_FCFLAGS = -cpp

# Current directory comes first, and takes precedence over model/include/ and model/
AM_FCFLAGS += $(FC_MODINC).
AM_FCFLAGS += $(FC_MODINC)$(top_srcdir)/model/include
AM_FCFLAGS += $(FC_MODINC)$(MODDIR)
AM_LDFLAGS =

src_overrides := $(sort $(wildcard *.f) $(wildcard **/*.f))
obj_overrides := $(patsubst %.f,%.o,$(src_overrides))

.DEFAULT_GOAL := mfix

LIBMFIX = $(top_builddir)/libmfix.a

bin_PROGRAMS = mfix
mfix_SOURCES = $(src_overrides)
mfix_LDADD = $(obj_overrides) $(builddir)/read_database.$(OBJEXT)
mfix_LDADD += $(builddir)/read_namelist.$(OBJEXT)
mfix_LDADD += $(top_builddir)/model/ODEPACK.$(OBJEXT)
mfix_LDADD += $(LIBMFIX)

.PHONY: $(LIBMFIX)

# top level directory needs to be built first
$(LIBMFIX):
	$(MAKE) -C $(top_builddir) mfix

clean-local:
	-$(MAKE) -C $(top_builddir) clean

$(builddir)/read_database.$(OBJEXT):  $(LIBMFIX)
$(builddir)/read_namelist.$(OBJEXT):  $(LIBMFIX)
$(top_builddir)/model/ODEPACK.$(OBJEXT):  $(LIBMFIX)

# read_namelist needs rebuilt in case usrnlst.inc is overridden
$(builddir)/read_namelist.$(OBJEXT): $(top_srcdir)/model/read_namelist.f
	$(FCCOMPILE) -c -o $@ $<

# read_database needs rebuilt to use the correct path to BURCAT.THR
$(builddir)/read_database.$(OBJEXT): $(top_srcdir)/model/read_database.f
	$(FCCOMPILE) -DBURCAT_THR="'$(top_srcdir)/model/thermochemical/BURCAT.THR'" -c -o $@ $<

species.inc: mfix.dat
	RUN_DIR=. $(top_srcdir)/config/rxn_preproc.sh

#########################################################################
#
#  "fortran-depcomp" generates makefile rules in "usrmodule.deps"
#
#      Include /dev/null so GREP doesn't hang if $^ is empty
#
#########################################################################

usrmodule.deps: $(src_overrides)
	@SRCDIR="$(srcdir)" OBJEXT="$(OBJEXT)" MODEXT="$(FC_MODEXT)" MODDIR="$(MODDIR)" \
	SED="$(SED)" GREP="$(GREP)" $(SHELL) $(top_srcdir)/build-aux/fortran-depcomp $^ > $@
	@SRCDIR="$(srcdir)" OBJEXT="$(OBJEXT)" MODEXT="$(FC_MODEXT)" MODDIR="$(MODDIR)" \
	SED="$(SED)" GREP="$(GREP)" $(SHELL) $(top_srcdir)/build-aux/update-usrdeps $@
	@for main_mod in `${GREP} -o -E "\S+\.${FC_MODEXT}" $@`; do \
	    echo "$${main_mod}: ${LIBMFIX}" >> $@; \
	done;
	@$(GREP) -i -l 'INCLUDE.*species.inc' /dev/null $^| $(SED) 's/$$/:\ species.inc/g' >> $@

$(eval -include usrmodule.deps)
CLEANFILES += usrmodule.deps species.inc
DISTCLEANFILES = Makefile

################################################################
#                                                              #
#      convenience target for postmfix                         #
#                                                              #
################################################################

postmfix: $(LIBMFIX)
	$(MAKE) -C $(top_builddir) post_mfix/postmfix
	cp $(top_builddir)/post_mfix/postmfix $@

################################################################
#                                                              #
#      OpenMP and MPI support                                  #
#                                                              #
#      --enable-smp and --enable-dmp options in configure.ac   #
#                                                              #
################################################################

if OPENMP
AM_FCFLAGS += $(OPENMP_FCFLAGS)
AM_LDFLAGS += $(OPENMP_FCFLAGS)
endif

if MPI
AM_FCFLAGS += -DMPI
AM_LDFLAGS += -DMPI
endif

################################################################
#      TAU support
################################################################
TAU_F90=@TAU_F90@
TAU_MAKEFILE=@TAU_MAKEFILE@
export TAU_F90
export TAU_MAKEFILE

################################################################
#      NETCDF support
################################################################
if USE_NETCDF
AM_FCFLAGS += $(FC_MODINC)$(NETCDF_INCLUDE)
mfix_LDADD += -L$(NETCDF_LIB) -lnetcdff
endif

################################################################
#                                                              #
#  Use absolute paths in the Makefile, so it can be copied     #
#  to any mfix.dat directory.                                  #
#                                                              #
################################################################

top_build_prefix=$(abs_top_build_prefix)
top_builddir=$(abs_top_builddir)
top_srcdir=$(abs_top_srcdir)
